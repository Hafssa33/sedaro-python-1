# coding: utf-8

"""
    Sedaro Satellite API

     Allows for consumption of Sedaro Satellite services. Read more about Sedaro Satellite at [satellite.sedaro.com](https://satellite.sedaro.com).   # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from sedaro import schemas  # noqa: F401


class Parameters(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    An enumeration.
    """
    
    @schemas.classproperty
    def SHADOW(cls):
        return cls("SHADOW")
    
    @schemas.classproperty
    def BETA(cls):
        return cls("BETA")
    
    @schemas.classproperty
    def MEAN_ANOM(cls):
        return cls("MEAN_ANOM")
    
    @schemas.classproperty
    def TRUE_ANOM(cls):
        return cls("TRUE_ANOM")
    
    @schemas.classproperty
    def LAT(cls):
        return cls("LAT")
    
    @schemas.classproperty
    def LON(cls):
        return cls("LON")
    
    @schemas.classproperty
    def ALT(cls):
        return cls("ALT")
    
    @schemas.classproperty
    def LO_SIGHT(cls):
        return cls("LO_SIGHT")
    
    @schemas.classproperty
    def RANGE(cls):
        return cls("RANGE")
    
    @schemas.classproperty
    def SOLAR_AZ(cls):
        return cls("SOLAR_AZ")
    
    @schemas.classproperty
    def SOLAR_EL(cls):
        return cls("SOLAR_EL")
    
    @schemas.classproperty
    def SAT_AZ(cls):
        return cls("SAT_AZ")
    
    @schemas.classproperty
    def SAT_EL(cls):
        return cls("SAT_EL")
    
    @schemas.classproperty
    def LOCAL_SIDEREAL_TIME(cls):
        return cls("LOCAL_SIDEREAL_TIME")
    
    @schemas.classproperty
    def EMPTY(cls):
        return cls("")
