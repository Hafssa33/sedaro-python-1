name: Test Action

description: Runs the tests

inputs:
  python-versions:
    description: 'Python version to test'
    required: true
  secrets-json:
    description: 'JSON string containing secrets'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-versions }}
        cache: 'pip'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest

    - name: Install local Sedaro package
      shell: bash
      run: |
        pip install ./sedaro

    - name: Parse and use secrets
      shell: bash
      run: |
        SECRETS=$(echo '${{ inputs.secrets-json }}' | jq -r '. | to_entries[] | "\(.key)=\"\(.value)\""')
        eval $SECRETS # Export secrets as environment variables

    - name: Create config.py
      shell: bash
      run: |
        echo "HOST = '${{ SECRETS.HOST }}'" >> tests/config.py
        echo "API_KEY = '${{ SECRETS.API_KEY }}'" >> tests/config.py
        echo "AUTH_HANDLE = '${{ SECRETS.AUTH_HANDLE }}'" >> tests/config.py

        echo "SIMPLESAT_A_T_ID = '${{ SECRETS.SIMPLESAT_A_T_ID }}'" >> tests/config.py
        echo "SIMPLESAT_SCENARIO_ID = '${{ SECRETS.SIMPLESAT_SCENARIO_ID }}'" >> tests/config.py
        echo "WILDFIRE_A_T_ID = '${{ SECRETS.WILDFIRE_A_T_ID }}'" >> tests/config.py
        echo "WILDFIRE_SCENARIO_ID = '${{ SECRETS.WILDFIRE_SCENARIO_ID }}'" >> tests/config.py

    - name: Test with pytest
      shell: bash
      run: pytest
