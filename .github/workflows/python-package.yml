# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Test Python Package

on:
  # trigger manually
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.10', '3.9']
      # run only one at a time, b/c tests run on same scenario/spacecraft branches; they mess each other up in parallel
      max-parallel: 1

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest

      - name: Install local Sedaro package
        run: |
          pip install ./sedaro

      - name: Create config.py
        run: |
          echo "HOST = '${{ secrets.HOST }}'" >> tests/config.py
          echo "API_KEY = '${{ secrets.API_KEY }}'" >> tests/config.py
          echo "AUTH_HANDLE = '${{ secrets.AUTH_HANDLE }}'" >> tests/config.py

          echo "SIMPLESAT_A_T_ID = '${{ secrets.SIMPLESAT_A_T_ID }}'" >> tests/config.py
          echo "SIMPLESAT_SCENARIO_ID = '${{ secrets.SIMPLESAT_SCENARIO_ID }}'" >> tests/config.py
          echo "WILDFIRE_A_T_ID = '${{ secrets.WILDFIRE_A_T_ID }}'" >> tests/config.py
          echo "WILDFIRE_SCENARIO_ID = '${{ secrets.WILDFIRE_SCENARIO_ID }}'" >> tests/config.py

      - name: Test with pytest
        run: |
          pytest

  publish:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Replace version in pyproject.toml
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          sed -i "s/version = \"0.0.0\"/version = \"$TAG\"/g" pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools build twine

      - name: Build the package
        run: |
          cd sedaro
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload dist/*
